include "gemini-default.conf"
beam.agentsim.simulationName = "gemini-scenario-0-base-oakland4k-helics"

beam.exchange.scenario.folder = ${beam.inputDirectory}"/urbansim/2010-718k-oakland-4k"
beam.warmStart.type = "disabled"
####
beam.agentsim.lastIteration = 0
##
beam.physsim.skipPhysSim = true
# scaling variables
beam.agentsim.agentSampleSizeAsFractionOfPopulation = 1.0
beam.physsim.flowCapacityFactor = 1.0
beam.agentsim.taz.parkingStallCountScalingFactor = 1.0
beam.agentsim.chargingNetworkManager.chargingPointCountScalingFactor = 1.0
beam.agentsim.chargingNetworkManager.chargingPointCostScalingFactor = 1.0
beam.agentsim.agents.vehicles.fractionOfInitialVehicleFleet = 1.0
beam.agentsim.agents.rideHail.initialization.procedural.fractionOfInitialVehicleFleet = 0.02
beam.agentsim.agents.vehicles.replanOnTheFlyWhenHouseholdVehiclesAreNotAvailable = false
beam.agentsim.agents.vehicles.generateEmergencyHouseholdVehicleWhenPlansRequireIt = false
########
# Infrastructure
beam.agentsim.agents.rideHail.initialization.parking.filePath = ${beam.inputDirectory}"/parking/sfbay_taz_unlimited_depots.csv"
########
beam.agentsim.chargingNetworkManager {
  timeStepInSeconds = 60
  chargingPointFilePath = ${beam.inputDirectory}"/parking/sfbay_taz_unlimited_charging_point.csv"
  scaleUp {
    enabled = false
  }
  sitePowerManagerController {
    connect = true
    expectFeedback = true
    numberOfFederates = 1
    brokerAddress = "tcp://127.0.0.1"
    coreType = "zmq"
    timeDeltaProperty = 1.0
    intLogLevel = 1
    beamFederatePrefix = "BEAM_FED"
    beamFederatePublication = "CHARGING_VEHICLES"
    spmFederatePrefix = "SPM_FED"
    spmFederateSubscription = "CHARGING_COMMANDS"
    bufferSize = 10000000
  }
  powerManagerController {
    connect = false
  }
}
