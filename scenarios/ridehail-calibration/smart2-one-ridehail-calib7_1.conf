include "../../sfbay-base.conf"

beam.agentsim.agents.modalBehaviors.multinomialLogit.params.ride_hail_transit_intercept = 0.0
beam.agentsim.agents.modalBehaviors.multinomialLogit.params.ride_hail_intercept = 1.0
beam.agentsim.agents.modalBehaviors.multinomialLogit.params.ride_hail_pooled_intercept = -4.5
beam.agentsim.agents.modalBehaviors.modeVotMultiplier.rideHailPooled = 2.0

# fleet size same as CPUC DATA
# test different fleets
# RH price TOM\
beam.agentsim.simulationName = "sfbay-smart2-rh-calibr7"
beam.agentsim.firstIteration = 0
beam.agentsim.lastIteration = 0

beam.agentsim.agents.rideHail.name = "Uber"
beam.agentsim.agents.rideHail.iterationStats.timeBinSizeInSec = 3600
##################################################################
# RideHail
##################################################################
# Initialization Type(PROCEDURAL | FILE)
beam.agentsim.agents.rideHail.initialization.initType = "PROCEDURAL"
# If PROCEDURAL, use these params
# initialization.procedural.initialLocation.name(INITIAL_RIDE_HAIL_LOCATION_HOME | INITIAL_RIDE_HAIL_LOCATION_UNIFORM_RANDOM | INITIAL_RIDE_HAIL_LOCATION_ALL_AT_CENTER | INITIAL_RIDE_HAIL_LOCATION_ALL_IN_CORNER)
beam.agentsim.agents.rideHail.initialization.procedural.initialLocation.name = "RANDOM_ACTIVITY"
beam.agentsim.agents.rideHail.initialization.procedural.initialLocation.home.radiusInMeters = 500
#     initialization.parking.filePath = ${beam.inputDirectory}"/../parking/sfbay_taz_unlimited_depots.csv"
beam.agentsim.agents.rideHail.initialization.procedural.vehicleTypeId="conv-L1-75000-to-100000-LowTech-2019"
beam.agentsim.agents.rideHail.initialization.procedural.fractionOfInitialVehicleFleet = 0.0026472
# If FILE, use this param
beam.agentsim.agents.rideHail.beam.agentsim.agents.rideHail.initialization.filePath=${beam.inputDirectory}"/../rideHailFleet.csv.gz"
# Ride Hailing General Params
beam.agentsim.agents.rideHail.defaultBaseCost=5.1
beam.agentsim.agents.rideHail.defaultCostPerMile=1.12
beam.agentsim.agents.rideHail.defaultCostPerMinute=0.32
beam.agentsim.agents.rideHail.pooledBaseCost=4.47
beam.agentsim.agents.rideHail.pooledCostPerMile=0.84
beam.agentsim.agents.rideHail.pooledCostPerMinute=0.00
beam.agentsim.agents.rideHail.refuelThresholdInMeters=1000.0
beam.agentsim.agents.rideHail.rideHailManager.radiusInMeters=5000
beam.agentsim.agents.rideHail.iterationStats.timeBinSizeInSec=3600
# SurgePricing parameters
beam.agentsim.agents.rideHail.surgePricing.surgeLevelAdaptionStep=0.1
beam.agentsim.agents.rideHail.surgePricing.minimumSurgeLevel=0.1
# priceAdjustmentStrategy(KEEP_PRICE_LEVEL_FIXED_AT_ONE | CONTINUES_DEMAND_SUPPLY_MATCHING)
beam.agentsim.agents.rideHail.surgePricing.priceAdjustmentStrategy="KEEP_PRICE_LEVEL_FIXED_AT_ONE"
# allocationManager(DEFAULT_MANAGER | STANFORD_V1 | BUFFERED_IMPL_TEMPLATE | RANDOM_REPOSITIONING | REPOSITIONING_LOW_WAITING_TIMES | DUMMY_DISPATCH_WITH_BUFFERING | POOLING_ALONSO_MORA)
beam.agentsim.agents.rideHail.allocationManager.name="POOLING_ALONSO_MORA"
beam.agentsim.agents.rideHail.allocationManager.alonsoMora.waitingTimeInSec = 1200
beam.agentsim.agents.rideHail.allocationManager.alonsoMora.travelTimeDelayAsFraction= 0.5
beam.agentsim.agents.rideHail.allocationManager.alonsoMora.solutionSpaceSizePerVehicle = 4
beam.agentsim.agents.rideHail.allocationManager.alonsoMora.maxRequestsPerVehicle = 5
beam.agentsim.agents.rideHail.allocationManager.requestBufferTimeoutInSeconds = 300
# repositioningManager can be DEFAULT_REPOSITIONING_MANAGER | DEMAND_FOLLOWING_REPOSITIONING_MANAGER | REPOSITIONING_LOW_WAITING_TIMES
beam.agentsim.agents.rideHail.repositioningManager.name="DEMAND_FOLLOWING_REPOSITIONING_MANAGER"
beam.agentsim.agents.rideHail.repositioningManager.timeout=300
# DEMAND_FOLLOWING_REPOSITIONING_MANAGER
beam.agentsim.agents.rideHail.repositioningManager.demandFollowingRepositioningManager.sensitivityOfRepositioningToDemand=2.0
beam.agentsim.agents.rideHail.repositioningManager.demandFollowingRepositioningManager.sensitivityOfRepositioningToDemandForCAVs=1.7
beam.agentsim.agents.rideHail.repositioningManager.demandFollowingRepositioningManager.fractionOfClosestClustersToConsider=0.2
beam.agentsim.agents.rideHail.repositioningManager.demandFollowingRepositioningManager.numberOfClustersForDemand=300
# REPOSITIONING_LOW_WAITING_TIMES
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.percentageOfVehiclesToReposition=0.007
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.timeWindowSizeInSecForDecidingAboutRepositioning=1200
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.allowIncreasingRadiusIfDemandInRadiusLow=true
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.minDemandPercentageInRadius=0.1
# repositioningMethod(TOP_SCORES | KMEANS)
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.repositioningMethod="TOP_SCORES"
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.keepMaxTopNScores=5
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.minScoreThresholdForRepositioning=0.00001
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.distanceWeight=0.01
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.waitingTimeWeight=4.0
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.demandWeight=4.0
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.produceDebugImages=true

