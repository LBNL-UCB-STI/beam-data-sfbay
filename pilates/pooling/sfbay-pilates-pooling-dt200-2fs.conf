include "sfbay-pilates-pooling-baseline.conf"

beam.agentsim.simulationName = "sfbay-pilates-pooling-dt200"

beam.router.skim.activity-sim-skimmer.fileOutputFormat = "omx"

beam.agentsim.agents.rideHail.managers = [
  {
    name = "Uber"
    iterationStats.timeBinSizeInSec = 3600
    ##################################################################
    # RideHail
    ##################################################################
    # Initialization Type(PROCEDURAL | FILE)
    initialization.initType = "PROCEDURAL"
    # If PROCEDURAL, use these params
    # initialization.procedural.initialLocation.name(INITIAL_RIDE_HAIL_LOCATION_HOME | INITIAL_RIDE_HAIL_LOCATION_UNIFORM_RANDOM | INITIAL_RIDE_HAIL_LOCATION_ALL_AT_CENTER | INITIAL_RIDE_HAIL_LOCATION_ALL_IN_CORNER)
    initialization.procedural.initialLocation.name = "RANDOM_ACTIVITY"
    initialization.procedural.initialLocation.home.radiusInMeters = 500
    initialization.procedural.vehicleTypeId="cv-L1-61000-2019"
    # If FILE, use this param
    beam.agentsim.agents.rideHail.initialization.filePath=${beam.inputDirectory}"/rideHailFleet.csv.gz"
    # Ride Hailing General Params
    defaultBaseCost=5.1
    defaultCostPerMile=1.12
    defaultCostPerMinute=0.32
    pooledBaseCost=4.47
    pooledCostPerMile=0.84
    pooledCostPerMinute=0.00
    refuelThresholdInMeters=1000.0
    rideHailManager.radiusInMeters=5000
    iterationStats.timeBinSizeInSec=3600
    # priceAdjustmentStrategy(KEEP_PRICE_LEVEL_FIXED_AT_ONE | CONTINUES_DEMAND_SUPPLY_MATCHING)
    surgePricing.priceAdjustmentStrategy="KEEP_PRICE_LEVEL_FIXED_AT_ONE"
    # allocationManager(DEFAULT_MANAGER | STANFORD_V1 | BUFFERED_IMPL_TEMPLATE | RANDOM_REPOSITIONING | REPOSITIONING_LOW_WAITING_TIMES | DUMMY_DISPATCH_WITH_BUFFERING | POOLING_ALONSO_MORA)
    allocationManager.name="POOLING_ALONSO_MORA"
    allocationManager.requestBufferTimeoutInSeconds = 300

    # ******************************************
    # ************** VARIABLES *****************
    # ******************************************
    # fleet size
    initialization.procedural.fractionOfInitialVehicleFleet = 0.005755
    # Waiting Time
    allocationManager.maxWaitingTimeInSec = 10000
    # Detour Time
    allocationManager.maxExcessRideTime = 2.0

    # ASYNC_GREEDY_VEHICLE_CENTRIC_MATCHING, ALONSO_MORA_MATCHING_WITH_ASYNC_GREEDY_ASSIGNMENT, ALONSO_MORA_MATCHING_WITH_MIP_ASSIGNMENT
    allocationManager.matchingAlgorithm = "ASYNC_GREEDY_VEHICLE_CENTRIC_MATCHING"
    allocationManager.alonsoMora.maxRequestsPerVehicle = 5

    # DEFAULT_REPOSITIONING_MANAGER, DEMAND_FOLLOWING_REPOSITIONING_MANAGER, INVERSE_SQUARE_DISTANCE_REPOSITIONING_FACTOR, REPOSITIONING_LOW_WAITING_TIMES, THE_SAME_LOCATION_REPOSITIONING_MANAGER, ALWAYS_BE_REPOSITIONING_MANAGER
    repositioningManager.name="INVERSE_SQUARE_DISTANCE_REPOSITIONING_FACTOR"
    repositioningManager.timeout=300
    repositioningManager.inverseSquareDistanceRepositioningFactor.sensitivityOfRepositioningToDemand = 0.2
    repositioningManager.inverseSquareDistanceRepositioningFactor.sensitivityOfRepositioningToDistance = 0.88668
    repositioningManager.inverseSquareDistanceRepositioningFactor.predictionHorizon = 3600
    # ******************************************
    # ******************************************
    # ******************************************
  },
  {
    name = "Lyft"
    iterationStats.timeBinSizeInSec = 3600
    ##################################################################
    # RideHail
    ##################################################################
    # Initialization Type(PROCEDURAL | FILE)
    initialization.initType = "PROCEDURAL"
    # If PROCEDURAL, use these params
    # initialization.procedural.initialLocation.name(INITIAL_RIDE_HAIL_LOCATION_HOME | INITIAL_RIDE_HAIL_LOCATION_UNIFORM_RANDOM | INITIAL_RIDE_HAIL_LOCATION_ALL_AT_CENTER | INITIAL_RIDE_HAIL_LOCATION_ALL_IN_CORNER)
    initialization.procedural.initialLocation.name = "RANDOM_ACTIVITY"
    initialization.procedural.initialLocation.home.radiusInMeters = 500
    initialization.procedural.vehicleTypeId="cv-L1-61000-2019"
    # If FILE, use this param
    beam.agentsim.agents.rideHail.initialization.filePath=${beam.inputDirectory}"/rideHailFleet.csv.gz"
    # Ride Hailing General Params
    defaultBaseCost=5.1
    defaultCostPerMile=1.12
    defaultCostPerMinute=0.32
    pooledBaseCost=4.47
    pooledCostPerMile=0.84
    pooledCostPerMinute=0.00
    refuelThresholdInMeters=1000.0
    rideHailManager.radiusInMeters=5000
    iterationStats.timeBinSizeInSec=3600
    # priceAdjustmentStrategy(KEEP_PRICE_LEVEL_FIXED_AT_ONE | CONTINUES_DEMAND_SUPPLY_MATCHING)
    surgePricing.priceAdjustmentStrategy="KEEP_PRICE_LEVEL_FIXED_AT_ONE"
    # allocationManager(DEFAULT_MANAGER | STANFORD_V1 | BUFFERED_IMPL_TEMPLATE | RANDOM_REPOSITIONING | REPOSITIONING_LOW_WAITING_TIMES | DUMMY_DISPATCH_WITH_BUFFERING | POOLING_ALONSO_MORA)
    allocationManager.name="POOLING_ALONSO_MORA"
    allocationManager.requestBufferTimeoutInSeconds = 300

    # ******************************************
    # ************** VARIABLES *****************
    # ******************************************
    # fleet size
    initialization.procedural.fractionOfInitialVehicleFleet = 0.0036809
    # Waiting Time
    allocationManager.maxWaitingTimeInSec = 10000
    # Detour Time
    allocationManager.maxExcessRideTime = 2.0

    # ASYNC_GREEDY_VEHICLE_CENTRIC_MATCHING, ALONSO_MORA_MATCHING_WITH_ASYNC_GREEDY_ASSIGNMENT, ALONSO_MORA_MATCHING_WITH_MIP_ASSIGNMENT
    allocationManager.matchingAlgorithm = "ASYNC_GREEDY_VEHICLE_CENTRIC_MATCHING"
    allocationManager.alonsoMora.maxRequestsPerVehicle = 5

    # DEFAULT_REPOSITIONING_MANAGER, DEMAND_FOLLOWING_REPOSITIONING_MANAGER, INVERSE_SQUARE_DISTANCE_REPOSITIONING_FACTOR, REPOSITIONING_LOW_WAITING_TIMES, THE_SAME_LOCATION_REPOSITIONING_MANAGER, ALWAYS_BE_REPOSITIONING_MANAGER
    repositioningManager.name="INVERSE_SQUARE_DISTANCE_REPOSITIONING_FACTOR"
    repositioningManager.timeout=300
    repositioningManager.inverseSquareDistanceRepositioningFactor.sensitivityOfRepositioningToDemand = 0.2
    repositioningManager.inverseSquareDistanceRepositioningFactor.sensitivityOfRepositioningToDistance = 0.88668
    repositioningManager.inverseSquareDistanceRepositioningFactor.predictionHorizon = 3600
    # ******************************************
    # ******************************************
    # ******************************************
  }
]




