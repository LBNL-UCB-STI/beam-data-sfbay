# Note: this configuration will use paths relative to the project root (PWD) unless you override with these
# environment variables (use directories ending with slash):
# BEAM_OUTPUTS=/path/to/your/preferred/output/destination/

# This configuration is for gemini base 2035 as defined in the project
# It relies on SMART 2040 demand and 2035 EV penetration with same vehicle ownership as 2019 level (urbansim)
# Residential charging is XXX %, XFC is XXX %

include "../smart/smart-baseline-2040.conf"
# Need to change the following to relieve walking distance:
# - plans need to be cut into shorter distances, closer to the network
# - parking needs to be more available and searching distance should be shorter
# - spatial split should be somewhat bigger

##################################################################
# Agentsim
##################################################################
beam.agentsim.simulationName = "gemini-base-2035"
beam.agentsim.firstIteration = 0
beam.agentsim.lastIteration = 0

beam.warmStart.prepareData = false
beam.agentsim.agents.vehicles.generateEmergencyHouseholdVehicleWhenPlansRequireIt = false # keep it false for later scenarios
beam.agentsim.randomSeedForPopulationSampling = 5711
beam.agentsim.snapLocationAndRemoveInvalidInputs = true

#beam.warmStart.type = "linkStatsOnly"
#beam.warmStart.path = "https://beam-outputs.s3.amazonaws.com/output/sfbay/gemini-scenario-4-unconstrained-scaleUp-10percent__2021-11-12_00-28-59_bvr/warmstart_data.zip"
#beam.warmStart.path = ${beam.inputDirectory}"/../activitysim/2018/warmstart_data.zip"

beam.debug.vmInformation.createGCClassHistogram = true
# population
# There are 6 015 030 persons with plans
# 0.001 -> 6k
# 0.005 -> 30k
# 0.01  -> 60k
# 0.0117 -> 70k
# 0.02  -> 120k flowcap ->  0.04
# 0.04  -> 240k flowcap ->  0.05
# 0.1   -> 601k flowcap ~   0.12
# 0.15  -> 902k flowcap ~   0.16
beam.agentsim.agentSampleSizeAsFractionOfPopulation = 1.0
# intercept
beam.agentsim.agents.modalBehaviors.multinomialLogit.params.transfer = -1.4
beam.agentsim.agents.modalBehaviors.multinomialLogit.params.car_intercept = -45.0
beam.agentsim.agents.modalBehaviors.multinomialLogit.params.walk_transit_intercept = 1.5
beam.agentsim.agents.modalBehaviors.multinomialLogit.params.drive_transit_intercept = -2.0
beam.agentsim.agents.modalBehaviors.multinomialLogit.params.ride_hail_transit_intercept = 3.0
beam.agentsim.agents.modalBehaviors.multinomialLogit.params.ride_hail_intercept = -55.0
beam.agentsim.agents.modalBehaviors.multinomialLogit.params.ride_hail_pooled_intercept = -56.0
beam.agentsim.agents.modalBehaviors.multinomialLogit.params.walk_intercept = 9.75
beam.agentsim.agents.modalBehaviors.multinomialLogit.params.bike_intercept = 8.75
# Vot
beam.agentsim.agents.modalBehaviors.modeVotMultiplier.CAV = 0.35 // Does not effect mode choice
beam.agentsim.agents.modalBehaviors.modeVotMultiplier.bike = 4.5
beam.agentsim.agents.modalBehaviors.modeVotMultiplier.drive = 1.0
beam.agentsim.agents.modalBehaviors.modeVotMultiplier.rideHail = 1.0
beam.agentsim.agents.modalBehaviors.modeVotMultiplier.transit = 1.0
beam.agentsim.agents.modalBehaviors.modeVotMultiplier.waiting = 2.0
beam.agentsim.agents.modalBehaviors.modeVotMultiplier.walk = 1.0

beam.agentsim.agents.modalBehaviors.bikeMultiplier.commute.ageGT50 = 1
beam.agentsim.agents.modalBehaviors.bikeMultiplier.noncommute.ageGT50 = 10000
beam.agentsim.agents.modalBehaviors.bikeMultiplier.commute.ageLE50 = 3
beam.agentsim.agents.modalBehaviors.bikeMultiplier.noncommute.ageLE50 = 250


# parking
beam.agentsim.taz.parkingFilePath = ${beam.inputDirectory}"/../parking/sfbay-parking-stalls.csv"
beam.agentsim.taz.parkingStallCountScalingFactor = 0.4

# vehicles
beam.agentsim.agents.vehicles.fractionOfInitialVehicleFleet = 1.0 // relative ownership of vehicle, if < 1.0, some will see their owned vehicle being retired
beam.agentsim.agents.vehicles.vehicleTypesFilePath = ${beam.inputDirectory}"/../gemini/vehicle-tech/vehicletypes-Base2035_2021620.csv"
beam.agentsim.agents.vehicles.vehiclesFilePath = ""

# ridehail
beam.agentsim.agents.rideHail.initialization.parking.filePath = ${beam.inputDirectory}"/../parking/sfbay_taz_unlimited_depots.csv"
beam.agentsim.agents.rideHail.initialization.procedural.vehicleTypeId="conv-L1-0-to-50000-LowTech-2035-Compact-ICEV_Gasoline"
beam.agentsim.agents.rideHail.initialization.procedural.fractionOfInitialVehicleFleet = 0.03 // How many ride hail agents, as a portion of initial total personal vehicles
beam.agentsim.agents.rideHail.rideHailManager.radiusInMeters = 5000
beam.agentsim.agents.rideHail.name = "GlobalRHM"

# Ridehail Matching
beam.agentsim.agents.rideHail.allocationManager.alonsoMora.waitingTimeInSec = 1200
beam.agentsim.agents.rideHail.allocationManager.alonsoMora.travelTimeDelayAsFraction= 0.5
beam.agentsim.agents.rideHail.allocationManager.alonsoMora.solutionSpaceSizePerVehicle = 4
beam.agentsim.agents.rideHail.allocationManager.requestBufferTimeoutInSeconds = 300

# Reposition
beam.agentsim.agents.rideHail.repositioningManager.name="DEMAND_FOLLOWING_REPOSITIONING_MANAGER"
beam.agentsim.agents.rideHail.repositioningManager.timeout=300
beam.agentsim.agents.rideHail.repositioningManager.demandFollowingRepositioningManager.sensitivityOfRepositioningToDemand=3.4
beam.agentsim.agents.rideHail.repositioningManager.demandFollowingRepositioningManager.sensitivityOfRepositioningToDemandForCAVs=1.7
beam.agentsim.agents.rideHail.repositioningManager.demandFollowingRepositioningManager.fractionOfClosestClustersToConsider=0.2
beam.agentsim.agents.rideHail.repositioningManager.demandFollowingRepositioningManager.numberOfClustersForDemand=300

beam.agentsim.agents.rideHail.cav.refuelRequiredThresholdInMeters = 32180 # 20 miles
beam.agentsim.agents.rideHail.cav.noRefuelThresholdInMeters = 160934.0 # 100 miles

# Parking Manager
beam.agentsim.taz.parkingManager.method = "PARALLEL"
beam.agentsim.taz.parkingManager.parallel.numberOfClusters = 8

## PARKING
beam.agentsim.agents.parking.rangeAnxietyBuffer = 20000.0
beam.agentsim.agents.parking.minSearchRadius = 250.00
beam.agentsim.agents.parking.maxSearchRadius = 804.72
beam.agentsim.agents.parking.searchMaxDistanceRelativeToEllipseFoci = 4.0

beam.agentsim.agents.parking.multinomialLogit.params.rangeAnxietyMultiplier = -0.5   # fit range anxiety between [-1, 0]
beam.agentsim.agents.parking.multinomialLogit.params.distanceMultiplier = -0.086     # based on 20m walk, VoT = $35/hr should be u=-1.0
beam.agentsim.agents.parking.multinomialLogit.params.parkingPriceMultiplier = -0.005 # based on avg. parking prices up to $200!
beam.agentsim.agents.parking.multinomialLogit.params.homeActivityPrefersResidentialParkingMultiplier = 1.0 # positive boost of 1.0 if true
beam.agentsim.agents.parking.multinomialLogit.params.enrouteDetourMultiplier = -0.05 # based on skim travel time and the defined VoT for car trips

beam.agentsim.agents.parking.overnightChargingSampleSize = 0.0

## VEHICLES
beam.agentsim.agents.vehicles.meanPrivateVehicleStartingSOC = 0.65
beam.agentsim.agents.vehicles.meanRidehailVehicleStartingSOC = 0.65

beam.agentsim.agents.vehicles.destination.noRefuelThresholdInMeters = 482803 # 300 miles
beam.agentsim.agents.vehicles.destination.refuelRequiredThresholdInMeters = 482803 # 300 miles # unlimited
beam.agentsim.agents.vehicles.destination.home.refuelRequiredThresholdInMeters = 482803 # 300 miles
beam.agentsim.agents.vehicles.destination.work.refuelRequiredThresholdInMeters = 482803 # 300 miles
beam.agentsim.agents.vehicles.destination.secondary.refuelRequiredThresholdInMeters = 482803 # 300 miles

## VEHICLES ENROUTE
beam.agentsim.agents.vehicles.enroute.refuelRequiredThresholdOffsetInMeters = 32186.9 # 20 miles
beam.agentsim.agents.vehicles.enroute.noRefuelThresholdOffsetInMeters = 128748 # 80 miles
beam.agentsim.agents.vehicles.enroute.noRefuelAtRemainingDistanceThresholdInMeters = 500
beam.agentsim.agents.vehicles.enroute.estimateOfMeanChargingDurationInSecond = 1800
beam.agentsim.agents.vehicles.enroute.remainingDistanceWrtBatteryCapacityThreshold = 2


# RIDEHAIL CHARGING
beam.agentsim.agents.rideHail.charging.vehicleChargingManager.name = "DefaultVehicleChargingManager"
beam.agentsim.agents.rideHail.charging.vehicleChargingManager.defaultVehicleChargingManager.multinomialLogit.params.drivingTimeMultiplier = -0.01666667 // one minute of driving is one util
beam.agentsim.agents.rideHail.charging.vehicleChargingManager.defaultVehicleChargingManager.multinomialLogit.params.queueingTimeMultiplier = -0.01666667 // one minute of queueing is one util
beam.agentsim.agents.rideHail.charging.vehicleChargingManager.defaultVehicleChargingManager.multinomialLogit.params.chargingTimeMultiplier = -0.01666667 // one minute of charging is one util
beam.agentsim.agents.rideHail.charging.vehicleChargingManager.defaultVehicleChargingManager.multinomialLogit.params.insufficientRangeMultiplier = -60.0 // indicator variable so straight 60 minute penalty if out of range

# TERMINATION CRITERION NAME OPTIONS:
beam.sim.termination.criterionName = "TerminateAtFixedIterationNumber"
beam.sim.termination.terminateAtRideHailFleetStoredElectricityConvergence.minLastIteration = 0
beam.sim.termination.terminateAtRideHailFleetStoredElectricityConvergence.maxLastIteration = 10
beam.sim.termination.terminateAtRideHailFleetStoredElectricityConvergence.relativeTolerance = 0.01
##################

beam.agentsim.agents.rideHail.linkFleetStateAcrossIterations = true
beam.agentsim.agents.vehicles.linkSocAcrossIterations = true

# ****************************************************************
# Charging Network Manager
#######
beam.agentsim.chargingNetworkManager {
  timeStepInSeconds = 300
  maxChargingSessionsInSeconds = 43200
  chargingPointCountScalingFactor = 1.0
  chargingPointCostScalingFactor = 1.0
  chargingPointFilePath = ${beam.inputDirectory}"/../parking/sfbay_taz_unlimited_charging_point.csv"
  scaleUp {
    enabled = false
    expansionFactor_home_activity = 2.9
    expansionFactor_work_activity = 2.9
    expansionFactor_charge_activity = 2.25
    expansionFactor_wherever_activity = 2.25
    expansionFactor_init_activity = 2.9
  }
  helics {
    connectionEnabled = false
    feedbackEnabled = false
    coreInitString = "--federates=1 --broker_address=tcp://127.0.0.1"
    coreType = "zmq"
    timeDeltaProperty = 1.0
    intLogLevel = 1
    federateName = "beamFederate"
    dataOutStreamPoint = "chargingLoad"
    dataInStreamPoint = "beam_to_pydss_federate/pubs_power_limit_and_lpm_control"
    bufferSize = 10000000
  }
}
########

# Replanning
beam.replanning {
  maxAgentPlanMemorySize = 6
  Module_1 = "SelectExpBeta"
  ModuleProbability_1 = 0.7
  Module_2 = "ClearRoutes"
  ModuleProbability_2 = 0.3
  Module_3 = "ClearModes"
  ModuleProbability_3 = 0.0
  Module_4 = "TimeMutator"
  ModuleProbability_4 = 0.0
}

# SKIMMER
beam.router.skim = {
  keepKLatestSkims = 1
  writeSkimsInterval = 3
  writeAggregatedSkimsInterval = 3
  travel-time-skimmer {
    name = "travel-time-skimmer"
    fileBaseName = "skimsTravelTimeObservedVsSimulated"
  }
  origin_destination_skimmer {
    name = "od-skimmer"
    fileBaseName = "skimsOD"
    writeAllModeSkimsForPeakNonPeakPeriodsInterval = 0
    writeFullSkimsInterval = 0
    poolingTravelTimeOveheadFactor = 1.21
  }
  taz-skimmer {
    name = "taz-skimmer"
    fileBaseName = "skimsTAZ"
  }
  transit-crowding-skimmer {
    name = "transit-crowding-skimmer"
    fileBaseName = "skimsTransitCrowding"
  }
}


# There are 718543 persons with plans in activitysim-plans-base-2010-cut-718k-by-shapefile
beam.exchange.scenario {
  # source for now can be "MATSim" or "UrbanSim"
  source = "urbansim_v2"
  # Input file format for scenario loader can be "csv" or "parquet"
  fileFormat = "csv"
  folder = ${beam.inputDirectory}"/../activitysim/2018-30%-V4"
  convertWgs2Utm = true
    modeMap = [
        "BIKE           -> bike",
        "DRIVEALONEFREE -> car",
        "DRIVEALONEPAY  -> car",
        "DRIVE_COM      -> drive_transit",
        "DRIVE_EXP      -> drive_transit",
        "DRIVE_HVY      -> drive_transit",
        "DRIVE_LOC      -> drive_transit",
        "DRIVE_LRF      -> drive_transit",
        "SHARED2FREE    -> car",
        "SHARED2PAY     -> car",
        "SHARED3FREE    -> car",
        "SHARED3PAY     -> car",
        "TAXI           -> ride_hail",
        "TNC_SHARED     -> ride_hail",
        "TNC_SINGLE     -> ride_hail",
        "WALK           -> walk",
        "WALK_COM       -> walk_transit",
        "WALK_EXP       -> walk_transit",
        "WALK_HVY       -> walk_transit",
        "WALK_LOC       -> walk_transit",
        "WALK_LRF       -> walk_transit",
    ]
}
########
# input data from activity sim
beam.routing.carRouter="R5"
beam.physsim.inputNetworkFilePath = ${beam.inputDirectory}"/../r5-simple-no-local/physsim-network.xml"
beam.physsim.flowCapacityFactor = 0.4
beam.physsim.linkStatsWriteInterval = 3
beam.physsim.writePlansInterval = 3
beam.physsim.skipPhysSim = false
beam.outputs.defaultWriteInterval = 3
beam.outputs.writePlansInterval = 3
beam.routing {
  #Base local date in ISO 8061 YYYY-MM-DDTHH:MM:SS+HH:MM
  baseDate = "2017-09-22T00:00:00-07:00"
  transitOnStreetNetwork = true
  r5 {
    directory = ${beam.inputDirectory}"/../r5-simple-no-local"
    # Departure window in min
    departureWindow = 1.0167
    osmFile = ${beam.inputDirectory}"/../r5-simple-no-local/sf-bay.osm.pbf"
    osmMapdbFile = ${beam.inputDirectory}"/../r5-simple-no-local/osm.mapdb"
    mNetBuilder.fromCRS = "epsg:4326" # WGS84
    mNetBuilder.toCRS = ${beam.spatial.localCRS}
  }
}
########
# google api usage
beam.calibration.google.travelTimes {
    enable=false
    iterationInterval=5
    minDistanceInMeters=5000.0
    numDataPointsOver24Hours=100
    offPeakEnabled=false
    queryDate="2020-10-14"
    tolls=true
}
########

######### WE DO NOT NEED TO GENERATE SECONDARY ACTIVITIES
# using defaults because these values are overridden in gemini baseline
beam.agentsim.fractionOfPlansWithSingleActivity = 0.0
beam.agentsim.agents.tripBehaviors.multinomialLogit.generate_secondary_activities = false
beam.agentsim.agents.tripBehaviors.multinomialLogit.intercept_file_path = ""
beam.agentsim.agents.tripBehaviors.multinomialLogit.activity_file_path = ""
beam.agentsim.agents.tripBehaviors.multinomialLogit.additional_trip_utility = 0.0
beam.agentsim.agents.tripBehaviors.multinomialLogit.max_destination_distance_meters = 32000
beam.agentsim.agents.tripBehaviors.multinomialLogit.max_destination_choice_set_size = 20
beam.agentsim.agents.tripBehaviors.multinomialLogit.destination_nest_scale_factor = 1.0
beam.agentsim.agents.tripBehaviors.multinomialLogit.mode_nest_scale_factor = 1.0
beam.agentsim.agents.tripBehaviors.multinomialLogit.trip_nest_scale_factor = 1.0
# removing 40% of worker gives the best looking curve for 'activities end' graph for Work activity
beam.agentsim.fractionOfPlansWithSingleActivity = 0.0
########

beam.agentsim.agents.vehicles.fractionOfPeopleWithBicycle=1.0


beam.agentsim.agents.vehicles.sharedFleets = [
  {
    name = "bay_wheels"
    managerType = "fixed-non-reserving-fleet-by-taz"

    parkingFilePath = ${beam.inputDirectory}"/../parking/shared-bike-parking-hubs-199-real.csv"
    #@optional
    fixed-non-reserving-fleet-by-taz {
      vehicleTypeId = "sharedVehicle-sharedBike",
      vehiclesSharePerTAZFromCSV = ${beam.inputDirectory}"/../parking/shared-bike-initial-199-real.csv",
      maxWalkingDistance = 500,
      //https://mtc.ca.gov/operations/traveler-services/bay-wheels-bike-share-program
      fleetSize = 60

    }
  }
]
