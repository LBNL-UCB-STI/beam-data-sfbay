include "sfbay-base.conf"

beam.agentsim.simulationName = "sfbay-pilates-base"
# Ingest 275000 households -> 720000 persons from activitysim
beam.agentsim.agentSampleSizeAsFractionOfPopulation = 1.0
beam.agentsim.firstIteration = 0
beam.agentsim.lastIteration = 0

beam.physsim.flowCapacityFactor = 0.08
beam.physsim.skipPhysSim = false
beam.physsim.name = "PARBPRSim"
#merging incoming input with the lat run output
beam.input.lastBaseOutputDir = ${beam.outputs.baseOutputDirectory}
beam.input.simulationPrefix = "year"
beam.agentsim.agents.plans.merge.fraction = 0.4
beam.warmStart.type = "linkStatsFromLastRun"
beam.warmStart.initialLinkstatsFilePath = ${beam.inputDirectory}"/r5-simple-no-local/init.linkstats.csv.gz"
beam.outputs.defaultWriteInterval=1
beam.router.skim.writeSkimsInterval = 1
beam.agentsim.taz.filePath=${beam.inputDirectory}"/shape/sfbay-tazs-epsg-26910.shp"
beam.agentsim.taz.tazIdFieldName = "taz1454"
beam.routing.startingIterationForTravelTimesMSA = 2

beam.exchange {
  output {
    activitySimSkimsEnabled = true
  }
}

beam.exchange.scenario {
  # source for now can be "MATSim" or "UrbanSim"
  source = "urbansim_v2"
  # Input file format for scenario loader can be "csv" or "parquet"
  fileFormat = "csv"
  folder = ${beam.inputDirectory}"/urbansim"
  convertWgs2Utm = true
  modeMap = [
    "BIKE           -> bike",
    "DRIVEALONEFREE -> car",
    "DRIVEALONEPAY  -> car",
    "DRIVE_COM      -> drive_transit",
    "DRIVE_EXP      -> drive_transit",
    "DRIVE_HVY      -> drive_transit",
    "DRIVE_LOC      -> drive_transit",
    "DRIVE_LRF      -> drive_transit",
    "SHARED2FREE    -> hov2",
    "SHARED2PAY     -> hov2",
    "SHARED3FREE    -> hov3",
    "SHARED3PAY     -> hov3",
    "TAXI           -> ride_hail",
    "TNC_SHARED     -> ride_hail_pooled",
    "TNC_SINGLE     -> ride_hail",
    "WALK           -> walk",
    "WALK_COM       -> walk_transit",
    "WALK_EXP       -> walk_transit",
    "WALK_HVY       -> walk_transit",
    "WALK_LOC       -> walk_transit",
    "WALK_LRF       -> walk_transit",
  ]
}
##################################################################
# BEAM ROUTING SERVICE
##################################################################
beam.physsim.inputNetworkFilePath = ${beam.inputDirectory}"/r5-simple-no-local/physsim-network.xml"
beam.routing {
  #Base local date in ISO 8061 YYYY-MM-DDTHH:MM:SS+HH:MM
  transitOnStreetNetwork = true
  baseDate = "2017-09-22T00:00:00-07:00"
  r5 {
    directory = ${beam.inputDirectory}"/r5-simple-no-local"
    # Departure window in min
    departureWindow = 1.0167
    osmFile = ${beam.inputDirectory}"/r5-simple-no-local/bay_area_simplified_tertiary_strongly_2_way_network.osm.pbf"
    osmMapdbFile = ${beam.inputDirectory}"/r5-simple-no-local/osm.mapdb"
    mNetBuilder.fromCRS = "epsg:4326" # WGS84
    mNetBuilder.toCRS = ${beam.spatial.localCRS}
    transitAlternativeList = "NONOPTIMAL"
    suboptimalMinutes = 10
  }
}

beam.routing.r5.travelTimeNoiseFraction = 0.1
beam.physsim.network.overwriteRoadTypeProperties {
    motorway.alpha = 0.83 #Freeway
    motorway.beta = 5.5 #Freeway
    motorwayLink.alpha = 0.83 #Freeway-to-Freeway Connector
    motorwayLink.beta = 5.5 #Freeway-to-Freeway Connector
    trunk.alpha = 0.71 #Expressway
    trunk.beta = 2.1 #Expressway
    trunkLink.alpha = 0.83 #Ramp
    trunkLink.beta = 5.5 #Ramp
    primary.alpha = 0.6 #Super Arterial
    primary.beta = 3.5 #Super Arterial
    primaryLink.alpha = 0.83 #Ramp
    primaryLink.beta = 5.5 #Ramp
    secondary.alpha = 0.6 #Major Arterial
    secondary.beta = 3.5 #Major Arterial
    secondaryLink.alpha = 0.83 #Ramp
    secondaryLink.beta = 5.5 #Ramp
    tertiary.alpha = 0.6 #Minor Arterial
    tertiary.beta = 3.5 #Minor Arterial
    tertiaryLink.alpha = 0.83 #Ramp
    tertiaryLink.beta = 5.5 #Ramp
    minor.alpha = 0.6 #Collector
    minor.beta = 8.5 #Collector
    unclassified.alpha = 0.6 #Collector
    unclassified.beta = 8.5 #Collector
    residential.alpha = 0.6 #Local Street
    residential.beta = 8.5 #Local Street
    livingStreet.alpha = 0.6 #Alley
    livingStreet.beta = 8.5 #Alley
}

beam.agentsim.agents.rideHail.initialization.procedural.vehicleTypeId="RH_Car"