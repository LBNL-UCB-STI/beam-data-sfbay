include "../smart2/sfbay-base.conf"

# YEAR 2018

##################################################################
# Agentsim
##################################################################
beam.agentsim.simulationName = "sfbay-freight-base"
beam.agentsim.firstIteration = 0
beam.agentsim.lastIteration = 18

beam.warmStart.prepareData = false

beam.agentsim.agents.freight {
  enabled = true
  plansFilePath = ${beam.inputDirectory}"/frism-plans-base/freight-merged-payload-plans.csv"
  toursFilePath = ${beam.inputDirectory}"/frism-plans-base/freight-merged-tours.csv"
  carriersFilePath = ${beam.inputDirectory}"/frism-plans-base/freight-merged-carriers.csv"
  isWgs = true
  generateFixedActivitiesDurations = true
  nonHGVLinkWeightMultiplier = 2.0
  tourSampleSizeAsFractionOfTotal = 0.1
}

#beam.outputs.events.fileOutputFormats = "csv"
#beam.physsim.events.fileOutputFormats = "csv"
beam.physsim.eventsForFullVersionOfVia = true
# population
# There are 6 015 030 persons with plans
# 0.001 -> 6k
# 0.005 -> 30k
# 0.01  -> 60k
# 0.0117 -> 70k
# 0.02  -> 120k flow cap ->  0.04
# 0.04  -> 240k flow cap ->  0.05
# 0.1   -> 601k flow cap ~   0.12
# 0.15  -> 902k flow cap ~   0.16
# 0.12*0.95+0.12*0.05 = 0.12 => freight estimated to represent 5% of the traffic
beam.physsim.flowCapacityFactor = 0.12

# vehicles
beam.agentsim.agents.vehicles.vehicleTypesFilePath = ${beam.inputDirectory}"/../smart/vehicle-tech/vehicletypes-baseline-freight.csv"

# rideHail
# How many ride hail agents, as a portion of initial total personal vehicles
beam.agentsim.agents.rideHail.initialization.procedural.fractionOfInitialVehicleFleet = 0.005

####### Outputs
beam.outputs.defaultWriteInterval = 3
beam.outputs.writePlansInterval = 3

######## PhysSim
# input data from activity sim
beam.physsim.inputNetworkFilePath = ${beam.inputDirectory}"/../r5-hgv/physsim-network.xml"
beam.physsim.linkStatsWriteInterval = 3
beam.physsim.writePlansInterval = 3
beam.physsim.skipPhysSim = false
beam.routing {
  #Base local date in ISO 8061 YYYY-MM-DDTHH:MM:SS+HH:MM
  baseDate = "2017-09-22T00:00:00-07:00"
  transitOnStreetNetwork = true
  r5 {
    # Departure window in min
    departureWindow = 1.0167
    mNetBuilder.fromCRS = "epsg:4326" # WGS84
    mNetBuilder.toCRS = ${beam.spatial.localCRS}
    directory = ${beam.inputDirectory}"/../r5-hgv"
    osmFile = ${beam.inputDirectory}"/../r5-hgv/sfbay-links-filtered-by-zoneids.osm.pbf"
    osmMapdbFile = ${beam.inputDirectory}"/../r5-hgv/osm.mapdb"
  }
  skim {
    writeSkimsInterval = 1
    writeAggregatedSkimsInterval = 1
  }
}

######## Router/Skim
beam.routing.carRouter="R5"
beam.router.skim {
  keepKLatestSkims = 1
  writeSkimsInterval = 3
  writeAggregatedSkimsInterval = 3
  travel-time-skimmer {
    name = "travel-time-skimmer"
    fileBaseName = "skimsTravelTimeObservedVsSimulated"
  }
  origin_destination_skimmer {
    name = "od-skimmer"
    fileBaseName = "skimsOD"
    writeAllModeSkimsForPeakNonPeakPeriodsInterval = 0
    writeFullSkimsInterval = 0
    poolingTravelTimeOveheadFactor = 1.21
  }
  taz-skimmer {
    name = "taz-skimmer"
    fileBaseName = "skimsTAZ"
  }
  transit-crowding-skimmer {
    name = "transit-crowding-skimmer"
    fileBaseName = "skimsTransitCrowding"
  }
}

