include "sfbay-base.conf"

beam.agentsim.simulationName = "sfbay-pilates-PARBPRSim-oldmap-09"

beam.agentsim.agentSampleSizeAsFractionOfPopulation = 1.0
beam.agentsim.firstIteration = 0
beam.agentsim.lastIteration = 20

beam.physsim.flowCapacityFactor = 0.09
beam.physsim.skipPhysSim = false
beam.physsim.name = "PARBPRSim"
#merging incoming input with the lat run output
beam.input.lastBaseOutputDir = ${beam.outputs.baseOutputDirectory}
beam.input.simulationPrefix = ${beam.agentsim.simulationName}
beam.warmStart.type = "disabled"
beam.outputs.defaultWriteInterval=5
beam.router.skim.writeSkimsInterval = 5
beam.agentsim.taz.filePath=${beam.inputDirectory}"/taz-centers.csv"
beam.debug.debugEnabled = true
beam.debug.stuckAgentDetection.enabled = false

# Turn of en-route charging
beam.agentsim.agents.vehicles.enroute.remainingDistanceWrtBatteryCapacityThreshold = 0

beam.exchange {
  output {
    activitySimSkimsEnabled = true
  }
}

beam.exchange.scenario {
  # source for now can be "MATSim" or "UrbanSim"
  source = "urbansim_v2"
  # Input file format for scenario loader can be "csv" or "parquet"
  fileFormat = "csv"
  folder = ${beam.inputDirectory}"/urbansim"
  convertWgs2Utm = true
  modeMap = [
    "BIKE           -> bike",
    "DRIVEALONEFREE -> car",
    "DRIVEALONEPAY  -> car",
    "DRIVE_COM      -> drive_transit",
    "DRIVE_EXP      -> drive_transit",
    "DRIVE_HVY      -> drive_transit",
    "DRIVE_LOC      -> drive_transit",
    "DRIVE_LRF      -> drive_transit",
    "SHARED2FREE    -> hov2",
    "SHARED2PAY     -> hov2",
    "SHARED3FREE    -> hov3",
    "SHARED3PAY     -> hov3",
    "TAXI           -> ride_hail",
    "TNC_SHARED     -> ride_hail",
    "TNC_SINGLE     -> ride_hail",
    "WALK           -> walk",
    "WALK_COM       -> walk_transit",
    "WALK_EXP       -> walk_transit",
    "WALK_HVY       -> walk_transit",
    "WALK_LOC       -> walk_transit",
    "WALK_LRF       -> walk_transit",
  ]
}
##################################################################
# BEAM ROUTING SERVICE
##################################################################
beam.physsim.inputNetworkFilePath = ${beam.inputDirectory}"/r5-simple-no-local/physsim-network.xml"
beam.routing {
  #Base local date in ISO 8061 YYYY-MM-DDTHH:MM:SS+HH:MM
  transitOnStreetNetwork = true
  baseDate = "2017-09-22T00:00:00-07:00"
  r5 {
    directory = ${beam.inputDirectory}"/r5-simple-no-local"
    # Departure window in min
    departureWindow = 1.0167
    osmFile = ${beam.inputDirectory}"/r5-simple-no-local/bay_area_simplified_tertiary_strongly_2_way_network.osm.pbf"
    osmMapdbFile = ${beam.inputDirectory}"/r5-simple-no-local/osm.mapdb"
    mNetBuilder.fromCRS = "epsg:4326" # WGS84
    mNetBuilder.toCRS = ${beam.spatial.localCRS}
  }
}
beam.routing.r5.travelTimeNoiseFraction = 0.15
beam.physsim.jdeqsim.cacc.adjustedMinimumRoadSpeedInMetersPerSecond = 2.0
beam.physsim.network.overwriteRoadTypeProperties.primaryLink.capacity = 4000
beam.physsim.network.overwriteRoadTypeProperties.primaryLink.speed = 23.7
beam.physsim.network.overwriteRoadTypeProperties.primary.speed = 27.7
beam.physsim.network.overwriteRoadTypeProperties.motorwayLink.capacity = 5000
beam.physsim.network.overwriteRoadTypeProperties.motorwayLink.speed = 31.3
beam.physsim.network.overwriteRoadTypeProperties.trunkLink.capacity = 3000
beam.physsim.network.overwriteRoadTypeProperties.trunkLink.speed = 25.5
beam.physsim.network.overwriteRoadTypeProperties.secondaryLink.capacity = 3000
beam.physsim.network.overwriteRoadTypeProperties.secondary.speed = 29.0
beam.physsim.network.overwriteRoadTypeProperties.secondaryLink.speed = 26.8
beam.physsim.network.overwriteRoadTypeProperties.unclassified.capacity = 6000
beam.physsim.network.overwriteRoadTypeProperties.road.capacity = 6000
beam.routing.startingIterationForTravelTimesMSA = 10

beam.warmStart.type = "linkStatsFromLastRun"
beam.warmStart.initialLinkstatsFilePath = ${beam.inputDirectory}"/r5-simple-no-local/init.linkstats.csv.gz"